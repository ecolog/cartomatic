- name: loading OS variables
  include_vars: "{{ ansible_os_family|lower }}.yml"
  tags:
    - apache

- name: creating group
  group:
    name={{ apache.group }}
    state=present
  tags:
    - apache

- name: creating user
  user:
    name={{ apache.user }}
    shell="/bin/false"
    groups={{ apache.group }}
    system=yes
    append=no
  tags:
    - apache

- name: installing packages
  apt:
    pkg={{ item }}
    state=installed
  with_items: apache_role.packages
  when: (ansible_os_family == "Debian")
  tags:
    - apache

- name: installing packages
  yum:
    pkg={{ item }}
    state=installed
  when: (ansible_os_family == "RedHat")
  with_items: apache_role.packages
  tags:
    - apache

- name: stopping service
  service:
    name={{ apache_role.service }}
    state=stopped
  ignore_errors: True
  tags:
    - apache

- name: creating log directories
  file:
    path={{ apache_role.logdir }}/{{ item.key }}
    mode=0755
    owner={{ apache.user }}
    group={{ apache.group }}
    state=directory
    recurse=yes
  with_dict: stores
  tags:
    - apache

- name: linking modules directory
  file:
    src={{ apache_role.moddir }}/modules
    dest={{ apache_role.path }}/modules
    state=link
  tags:
    - apache

- name: cleaning directories for virtual hosts
  file:
    path={{ apache_role.path }}/{{ item }}
    state=absent
  with_items:
    - "html"
    - "conf.d"
    - "conf.modules.d"
    - "conf-enabled"
    - "sites-enabled"
    - "mods-enabled"
    - "xtra"
  tags:
    - apache

- name: creating directories for vhosts
  file:
    path={{ apache_role.path }}/{{ item }}
    state=directory
  with_items:
    - "html"
    - "sites-available"
    - "sites-enabled"
    - "mods-available"
    - "mods-enabled"
    - "conf-available"
    - "conf-enabled"
    - "xtra"
  tags:
    - apache

- name: loading virtual hosts
  template:
    src=sites-available/default.j2
    dest={{ apache_role.path }}/sites-available/{{ item.key }}.conf
  with_dict: stores
  tags:
    - apache

- name: enabling virtual hosts
  file:
    src={{ apache_role.path }}/sites-available/{{ item.key }}.conf
    dest={{ apache_role.path }}/sites-enabled/{{ item.key }}.conf
    state=link
  with_dict: stores
  tags:
    - apache

- name: loading modules
  template:
    src=mods-available/{{ item }}.j2
    dest={{ apache_role.path }}/mods-available/{{ item }}
  with_items: apache.modules
  tags:
    - apache

- name: enabling modules
  file:
    src={{ apache_role.path }}/mods-available/{{ item }}
    dest={{ apache_role.path }}/mods-enabled/{{ item }}
    state=link
  with_items: apache.modules
  tags:
    - apache

- name: loading modules configs
  template:
    src=conf-available/{{ item }}.j2
    dest={{ apache_role.path }}/conf-available/{{ item }}
  with_items: apache.configs
  tags:
    - apache

- name: enabling modules configs
  file:
    src={{ apache_role.path }}/conf-available/{{ item }}
    dest={{ apache_role.path }}/conf-enabled/{{ item }}
    state=link
  with_items: apache.configs
  tags:
    - apache

- name: loading main configs
  template:
    src={{ item }}.j2
    dest={{ apache_role.path }}/conf/httpd.conf
  with_items:
    - "apache2.conf"
  when: (ansible_os_family == "RedHat")
  tags:
    - apache

- name: loading environment variables
  template:
    src={{ item }}.j2
    dest={{ apache_role.path }}/{{ item }}
  with_items:
    [
      "envvars"
    ]
  when: (ansible_os_family == "Debian")
  tags:
    - apache

- name: loading magic
  template:
    src={{ item }}.j2
    dest={{ apache_role.path }}/{{ item }}
  with_items:
    [
      "magic"
    ]
  tags:
    - apache

- name: loading main configurations
  template:
    src={{ item }}.j2
    dest={{ apache_role.path }}/{{ item }}
  with_items:
    [
      "apache2.conf"
    ]
  when: (ansible_os_family == "Debian")
  tags:
    - apache

- name: loading custom pages
  copy:
    src={{ item }}
    dest={{ apache_role.path }}/html/{{ item }}
  with_items:
    - "401.html"
    - "403.html"
    - "404.html"
    - "502.html"
    - "50X.html"
    - "index.html"
  tags:
    - apache

- name: setting up logrotate
  template:
    src=apache2.logrotate.j2
    dest=/etc/logrotate.d/{{ apache_role.service }}
    mode=644
    owner=root
    group=root
  tags:
    - apache

- name: setting permissions on /var/lock/apache2
  file:
    path=/var/lock/apache2
    state=directory
    recurse=yes
    owner={{ apache.user }}
    group={{ apache.group }}
    mode=755
  when: (ansible_os_family == "Debian")
  tags:
    - apache

- name: putting into autostart
  service:
    name={{ apache_role.service }}
    enabled=yes
  tags:
    - apache

- name: restarting service
  service:
    name={{ apache_role.service }}
    state=restarted
  ignore_errors: True
  tags:
    - apache